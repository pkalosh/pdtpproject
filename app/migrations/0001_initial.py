# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2019-04-03 14:51
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('performance', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_level', models.CharField(choices=[('PHD DEGREE', 'PHD DEGREE'), ('MASTERS DEGREE', 'MASTERS DEGREE'), ('BACHELORS DEGREE', 'BACHELORS DEGREE'), ('HIGHER DIPLOMA', 'HIGHER DIPLOMA'), ('DIPLOMA', 'DIPLOMA'), ('CERTIFICATE', 'CERTIFICATE'), ('OTHERS', 'OTHERS')], max_length=200, verbose_name='Qualification')),
                ('course_name', models.CharField(help_text='As it appears in the certificate', max_length=200, verbose_name='Course Name')),
                ('higher_institution_attended', models.CharField(help_text='As it appears in the certificate', max_length=200, verbose_name='Institution')),
                ('year', models.CharField(max_length=200, verbose_name='Year')),
                ('grade', models.CharField(blank=True, max_length=200, null=True, verbose_name='Grade')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'PDTP Academic Details',
            },
        ),
        migrations.CreateModel(
            name='ApplicationCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reported', models.BooleanField(default=False)),
                ('buddy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='buddy_assigned', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BankDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(max_length=200, verbose_name='Bank Name')),
                ('bank_code', models.CharField(max_length=200, verbose_name='Bank Branch Code')),
                ('branch', models.CharField(max_length=200, verbose_name='Bank Account Branch')),
                ('account_name', models.CharField(max_length=200, verbose_name='Bank Account Name')),
                ('account_number', models.CharField(max_length=200, verbose_name='Bank Account Number')),
                ('kra_pin', models.CharField(max_length=200, verbose_name='KRA PIN')),
                ('nhif_no', models.CharField(max_length=200, verbose_name='NHIF Number')),
                ('laptop', models.BooleanField(default=False, help_text='Check if yes', verbose_name='PDTP laptop hire purchase')),
                ('serial_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='If Yes, Enter the serial number')),
                ('year', models.CharField(default=0, max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Bank Details',
            },
        ),
        migrations.CreateModel(
            name='Broadcast',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=500)),
                ('message', tinymce.models.HTMLField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('recipient', models.CharField(choices=[('PDTPS', 'PDTPS'), ('SUPERVISORS', 'SUPERVISORS'), ('MENTORS', 'MENTORS'), ('FEMALE', 'FEMALE'), ('MALE', 'MALE'), ('ALL', 'ALL')], max_length=200)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='', verbose_name='Attachment')),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-timestamp',),
            },
        ),
        migrations.CreateModel(
            name='County',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('county', models.CharField(max_length=200)),
            ],
            options={
                'verbose_name_plural': 'Counties',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendees', models.CharField(choices=[('PDTPS', 'PDTPS'), ('MENTORS', 'MENTORS'), ('SUPERVISORS', 'SUPERVISORS'), ('CONTACT PERSONS', 'CONTACT PERSONS'), ('ALL', 'ALL')], max_length=200)),
                ('event', models.CharField(max_length=300, verbose_name='Event Name')),
                ('start_date', models.DateTimeField(verbose_name='Sart Date/Time')),
                ('end_date', models.DateTimeField(verbose_name='End Date/Time')),
                ('venue', models.CharField(max_length=200)),
                ('details', tinymce.models.HTMLField(verbose_name='More Information')),
                ('cancelled', models.BooleanField(default=False)),
                ('reason', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Reason For Cancelling')),
            ],
        ),
        migrations.CreateModel(
            name='ExitParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ExitR',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solved', models.BooleanField(default=False)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('date_approved', models.DateTimeField(blank=True, null=True)),
                ('reason_for_leaving', models.TextField(blank=True, null=True, verbose_name='Enter Reason For Clearing')),
                ('supervisor_comment', models.TextField(blank=True, null=True, verbose_name='Enter Reason For Clearing')),
                ('date_approved_by_supervisor', models.DateTimeField(auto_now=True, null=True)),
                ('approved_by_sec', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_by', to=settings.AUTH_USER_MODEL)),
                ('pdtp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExitRateParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ExitRateSubmited',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jibu', models.CharField(max_length=500)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ExitRateParameter')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExitSingleQuestionParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='ExitSingleSubmitted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jibu', models.CharField(max_length=500)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ExitSingleQuestionParameter')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExitSubmitted',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jibu', models.CharField(max_length=500)),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ExitParameter')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InnovationEvaluationData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('comment', models.CharField(max_length=1000)),
                ('datetime', models.DateField(auto_now_add=True)),
                ('evaluator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InnovationEvaluationParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parameter', models.CharField(max_length=500)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='InnovationEvaluationPerParam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_score', models.IntegerField(default=0)),
                ('evaluators', models.IntegerField(default=1, null=True)),
                ('average', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='InnovationSubmission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innovation_name', models.CharField(max_length=500, verbose_name='Innovation Name')),
                ('industry', models.CharField(max_length=200, verbose_name='Innovation industry sector(is it health,agriculture) ')),
                ('innovators_roles', tinymce.models.HTMLField(verbose_name='Innovators and Roles')),
                ('need', tinymce.models.HTMLField(verbose_name='The need:The proposed innovation must address an existing need.Be sure to distinguish a need(necessity) and a want(a good to have).What impact would the innovation have on government,industry,citizens and the world at large if successfully implemented? ')),
                ('option', tinymce.models.HTMLField(verbose_name='Options:Can the need be met differently?Has someone or company addressed the same need?if so,in what way does the proposed innovation differentiate itself from existing options')),
                ('market_potential', tinymce.models.HTMLField(verbose_name='Market potential: Who would for the proposed innovation?Address the issue of change and adoption.If implemented what benefits (e.g savings) does it present? ')),
                ('business_model', tinymce.models.HTMLField(verbose_name='Business Model: Can it be commercialized and how could this be done? Who could invest in this? what is attractive about it?')),
                ('feasiblity', tinymce.models.HTMLField(verbose_name='Feasibility : Can it be done? if so,how? what resources are required ? does the technology exist? what about skills required? ')),
                ('relevance', tinymce.models.HTMLField(verbose_name='Relevance : Does it fit with the county government development strategies? Does it fit with nature of the society targeted? Can the target market easily relate to the solution?')),
                ('how_it_works', tinymce.models.HTMLField(verbose_name='How it works: A brief explanation on how the proposed innovation works')),
                ('relevant_information', tinymce.models.HTMLField()),
                ('bibliography', tinymce.models.HTMLField()),
                ('appendices', tinymce.models.HTMLField()),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('year', models.CharField(default=2018, max_length=10)),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InnovationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('innovation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InnovationSubmission')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InterRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(max_length=300, verbose_name='Your Company Name')),
                ('profile', models.TextField(verbose_name='Company Profile. include website link')),
                ('contact_person', models.CharField(max_length=200, verbose_name='Contact Person Name')),
                ('contact', models.IntegerField(verbose_name='Contact Person Phone Number')),
                ('email', models.EmailField(max_length=254, verbose_name='Contact Person Email')),
                ('number', models.IntegerField(verbose_name='Number of Interns Needed')),
                ('specialization', models.CharField(max_length=500, verbose_name='Area of Specialization e.g Networking')),
                ('job_description', models.CharField(max_length=100, verbose_name='Job Description of the Intern')),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('handled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solved', models.BooleanField(default=False)),
                ('subject', models.CharField(help_text='Max 200 Charcters', max_length=200)),
                ('message', tinymce.models.HTMLField(verbose_name='Describe your Issue Here')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='IssueStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('RECIEVED', 'RECIEVED'), ('ESCALATE', 'ESCALATE'), ('SOLVED', 'SOLVED')], max_length=200)),
                ('comment', tinymce.models.HTMLField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Issue')),
            ],
        ),
        migrations.CreateModel(
            name='JobApps',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ApplicationCategory', verbose_name='Applying For?')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('laptop_name', models.CharField(max_length=200)),
                ('MAC', models.CharField(blank=True, max_length=200, null=True)),
                ('serial_no', models.CharField(blank=True, max_length=200, null=True)),
                ('RAM', models.CharField(max_length=200)),
                ('HDD', models.CharField(max_length=200)),
                ('Processor_Speed', models.CharField(max_length=200)),
                ('Cores', models.CharField(max_length=200, verbose_name='Processor')),
                ('screen_resolution', models.CharField(max_length=200, verbose_name='Screen Resolution')),
                ('other_features', models.CharField(help_text='bluetooth,wifi,webcam', max_length=500, verbose_name='Other Features')),
                ('status', models.CharField(choices=[('available', 'Available'), ('out of stock', 'Out of stock')], max_length=200, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=7)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LaptopOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.BooleanField(default=False)),
                ('Amount_Due', models.DecimalField(decimal_places=2, max_digits=7)),
                ('deductions', models.DecimalField(decimal_places=2, max_digits=7, null=True)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('laptop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Laptop')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Leave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField(verbose_name='Leave Start Date')),
                ('end_date', models.DateField(verbose_name='Leave End Date')),
                ('desk_office', models.CharField(blank='True', max_length=200, null=True, verbose_name='Desk Office')),
                ('leave_details', models.TextField(blank='True', null=True, verbose_name='Leave Details')),
                ('supervisor_recommmended_days', models.CharField(blank=True, max_length=10, null=True, verbose_name='Recommended Days')),
                ('duties_delagated_to', models.CharField(blank=True, max_length=200, null=True)),
                ('approved_by_supervisor', models.BooleanField(default=False, verbose_name='Approve')),
                ('supervisor_comment', models.TextField(blank=True, null=True)),
                ('date_approved_by_supervisor', models.DateTimeField(auto_now_add=True)),
                ('internship_contract_date', models.DateField(blank=True, null=True, verbose_name='Date of Internship Contract')),
                ('leave_days_balance', models.CharField(blank=True, max_length=200, null=True, verbose_name='Annual Leave Days Balance')),
                ('recommended', models.BooleanField(default=False)),
                ('date_approved_by_secretariat', models.DateTimeField(auto_now_add=True)),
                ('secretariat_comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('number_of_days', models.CharField(blank=True, max_length=10, null=True)),
                ('attachment', models.FileField(blank=True, null=True, upload_to='', verbose_name='Attach supporting ')),
                ('year', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LeaveType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_type', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('meeting_date', models.DateTimeField()),
                ('venue', models.CharField(max_length=200)),
                ('date_booked', models.DateTimeField(auto_now_add=True)),
                ('note', tinymce.models.HTMLField(verbose_name='Additional Note to the Mentee')),
                ('confirm', models.CharField(blank=True, choices=[('CONFIRMED', 'CONFIRMED'), ('NOT_CONFIRMED', 'NOT_CONFIRMED')], max_length=200, null=True)),
                ('confirm_text', models.CharField(blank=True, max_length=200, null=True)),
                ('report', tinymce.models.HTMLField(blank=True, null=True)),
                ('feedback', models.TextField(blank=True, null=True)),
                ('agenda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='performance.MentorParameter')),
                ('mentee', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mentor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MentorMenteeMapping',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=200)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentee', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MentorshipApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200, verbose_name='Full Name *')),
                ('email', models.EmailField(max_length=200, verbose_name='E-mail address *')),
                ('mobile', models.CharField(max_length=200, verbose_name='Personal Mobile No *')),
                ('company', models.CharField(max_length=200, verbose_name='Company *')),
                ('position', models.CharField(max_length=200, verbose_name='Position/Job Title *')),
                ('academic_profile', models.CharField(max_length=1000, verbose_name='Please list your Academic Qualifications : Degrees and/or diplomas held (Maximum 15 Entries)')),
                ('academic_qualifications', models.CharField(max_length=1000, verbose_name='Do you have academic qualifications in these areas? (Tick all that are applicable) *')),
                ('work_experience', models.IntegerField(verbose_name='How many years have you worked in total? *')),
                ('technical_position', models.BooleanField(default=False, verbose_name='Have you held any management or technical positions? *')),
                ('achievement', models.TextField(verbose_name='What do you consider your greatest achievement? *')),
                ('ethics', models.BooleanField(default=False, verbose_name='Have your ethics ever come into question? *')),
                ('criminally_liable', models.BooleanField(default=False, verbose_name='Have you ever been deemed criminally liable? *')),
                ('availability', models.BooleanField(default=False, verbose_name='Does your position necessitate frequent and long term travel? ')),
                ('shortest_out_of_country', models.IntegerField(verbose_name='What is the shortest length of time you are out of the country? (No of Days) *')),
                ('longest_out_of_country', models.IntegerField(verbose_name='What is the longest length of time you are out of the country? *')),
                ('personal_obligation', models.BooleanField(default=False, verbose_name='Do you have personal obligations that may limit your availability to mentor? *')),
                ('commitment', models.TextField(verbose_name='How would you handle your mentorship duties during busy periods at your work or personal life? *')),
                ('suggestions', models.TextField(verbose_name='Any other form of partnership or suggestion/s you may have?')),
                ('Application_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=200)),
                ('message', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('sent', models.BooleanField(default=True)),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recipient', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MustChangePassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner', models.CharField(max_length=500, verbose_name='Name')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('website', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=200, verbose_name='Organization Name')),
                ('full_name', models.CharField(max_length=200, verbose_name='Full Name')),
                ('position', models.CharField(max_length=200, verbose_name='Position/Title*')),
                ('department', models.CharField(max_length=200, verbose_name='Department *')),
                ('address', models.CharField(max_length=200, verbose_name='Postal Address*')),
                ('office_tel', models.CharField(max_length=200, verbose_name='Office Tel No*')),
                ('mobile', models.CharField(max_length=200, verbose_name='Personal Mobile No. *')),
                ('office_mail', models.EmailField(max_length=200, verbose_name='General Office Email*')),
                ('email', models.EmailField(max_length=200, verbose_name='Official Email*')),
                ('telephone', models.CharField(max_length=200, verbose_name='Telephone (Persons To Contact)')),
                ('partnership_category', models.CharField(max_length=200, verbose_name='Partnership Category*')),
                ('mentor_intern', models.CharField(max_length=100, verbose_name='Mentor an Intern(s)*')),
                ('speaker', models.CharField(max_length=200, verbose_name='Motivate Interns (Speaker)*')),
                ('trainer', models.CharField(max_length=200, verbose_name='Life Skills Coaching\u200b(Train)\u200b*')),
                ('panelist', models.CharField(max_length=200, verbose_name='nnovation Evaluation \u200b(\u200bPanelist\u200b)\u200b*')),
                ('legal_support', models.CharField(max_length=200, verbose_name='IP legal Support for innovators\u200b(serve)*')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerApply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partnership', models.TextField()),
                ('company', models.CharField(max_length=300, verbose_name='Your Company Name')),
                ('profile', models.TextField(verbose_name='Company Profile. include website link')),
                ('contact_person', models.CharField(max_length=200, verbose_name='Contact Person Name')),
                ('contact', models.IntegerField(verbose_name='Contact Person Phone Number')),
                ('email', models.EmailField(max_length=254, verbose_name='Contact Person Email')),
                ('details', models.TextField()),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('handled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerCohort',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PartnershipCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.DecimalField(decimal_places=2, max_digits=7)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LaptopOrder')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PDTPCV',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cv', models.FileField(upload_to='cvs')),
                ('pdtp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PDTPExitRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdtp_requested', models.BooleanField(default=False)),
                ('exit_request', models.CharField(blank=True, max_length=300, null=True, verbose_name='Why are you leaving? If job opportunity ,which one')),
                ('approved_by_supervisor', models.BooleanField(default=False)),
                ('approved_by_secretariat', models.BooleanField(default=False)),
                ('turn_out', models.CharField(blank=True, max_length=10, null=True, verbose_name='Did your internship turn out to be as you expected?')),
                ('training', models.CharField(blank=True, max_length=10, null=True, verbose_name='Did you receive enough training to do DLP assignment effectively?')),
                ('performance_feedback', models.CharField(blank=True, max_length=10, null=True, verbose_name='Did you receive sufficient feedback on your performance?\t')),
                ('working', models.CharField(blank=True, max_length=10, null=True, verbose_name='Would you consider working again for ICT Authority in the future?\t')),
                ('recommend', models.CharField(blank=True, max_length=10, null=True, verbose_name='Would you recommend this this program to a friend or collegue')),
                ('skills', models.CharField(blank=True, max_length=10, null=True, verbose_name='This internship has helped me to develop skills to solve problems')),
                ('interview_skills', models.CharField(blank=True, max_length=10, null=True, verbose_name='This internship has helped me to develop interviewing skills')),
                ('dlp_skills', models.CharField(blank=True, max_length=10, null=True, verbose_name='Has the DLP program helped you to improve communication skills')),
                ('professional', models.CharField(blank=True, max_length=10, null=True, verbose_name='This internship has helped me to develop professional competence')),
                ('anticipate', models.CharField(blank=True, max_length=10, null=True, verbose_name='I anticipate career advancement as a result of completing this Internship')),
                ('satisfying', models.CharField(blank=True, max_length=300, null=True, verbose_name='What was most satisfying about the DLP and/or internship experience?')),
                ('unsatisfying', models.CharField(blank=True, max_length=300, null=True, verbose_name='What was least satisfying about the DLP and/or internship experience?')),
                ('suggestion', models.CharField(blank=True, max_length=300, null=True, verbose_name='What suggestions do you have to help improve the overall program and experience?')),
                ('debriefed_by_secretariat', models.BooleanField(default=False)),
                ('reason_for_leaving', models.TextField(blank=True, null=True, verbose_name='Enter Reason For Clearing')),
                ('supervisor_comment', models.TextField(blank=True, null=True, verbose_name='Enter Reason For Clearing')),
                ('debrief_question', models.TextField(blank=True, null=True, verbose_name='Question 1')),
                ('date_of_request', models.DateTimeField(blank=True, null=True)),
                ('date_approved_by_supervisor', models.DateTimeField(auto_now=True, null=True)),
                ('date_approved_by_secretariat', models.DateTimeField(blank=True, null=True)),
                ('date_debriefed', models.DateTimeField(blank=True, null=True)),
                ('pdtp', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PDTPMentorshipReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report', tinymce.models.HTMLField()),
                ('parametors', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Meeting')),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PdtpYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-year',),
                'verbose_name_plural': 'PDTP Years',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_date', models.DateField(blank=True, null=True, verbose_name='Project Start Date')),
                ('project_Edate', models.DateField(blank=True, null=True, verbose_name='Project End Date')),
                ('link', models.CharField(blank=True, help_text='https://www.example.com', max_length=200, null=True, verbose_name='Project Link')),
                ('project_name', models.CharField(max_length=200, verbose_name='Project Name')),
                ('project_description', tinymce.models.HTMLField(verbose_name='Project Details')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, verbose_name='Name')),
                ('company', models.CharField(max_length=300, verbose_name='Company')),
                ('position', models.CharField(max_length=300, verbose_name='Position')),
                ('phone_number', models.CharField(max_length=100, verbose_name='Phone Number')),
                ('email', models.EmailField(max_length=200, verbose_name='Email')),
                ('country', models.CharField(max_length=200, verbose_name='Country')),
                ('town', models.CharField(max_length=200, verbose_name='Town')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', tinymce.models.HTMLField()),
                ('date_submitted', models.DateTimeField(auto_now_add=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comment', to=settings.AUTH_USER_MODEL)),
                ('mentorship_report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PDTPMentorshipReport')),
                ('parametor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Meeting')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=300, verbose_name='Skills Set')),
                ('detail', models.CharField(max_length=300, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='SkillLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_level', models.CharField(max_length=300, verbose_name='Skill Level')),
            ],
        ),
        migrations.CreateModel(
            name='SkillType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_type', models.CharField(max_length=300, verbose_name='Skill Specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('speciality', models.CharField(max_length=400)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SuccessStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('publish', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('role', models.CharField(max_length=200)),
                ('organization', models.CharField(max_length=200)),
                ('description', tinymce.models.HTMLField()),
                ('content', tinymce.models.HTMLField()),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos')),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert_no', models.CharField(default='To be changed', max_length=200, verbose_name='Certificate No.')),
                ('attended_training', models.BooleanField(default=False)),
                ('time_of_application', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Prefessional Certifications',
            },
        ),
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_category', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': 'Training Category',
            },
        ),
        migrations.CreateModel(
            name='TrainingCert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cert', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_option', models.CharField(choices=[('Normal Training', 'Normal Training'), ('Certification', 'Certification')], max_length=200)),
                ('course', models.CharField(max_length=250, unique=True)),
                ('description', tinymce.models.HTMLField(blank=True, null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingCategory')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingCourseStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': 'Training Course Status',
            },
        ),
        migrations.CreateModel(
            name='TrainingFeedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_submitted', models.DateField(auto_now_add=True)),
                ('feedback', tinymce.models.HTMLField()),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trainingapp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.TrainingCourse')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingInstitution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(max_length=300)),
                ('text', tinymce.models.HTMLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingMode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_mode', models.CharField(max_length=300)),
            ],
            options={
                'verbose_name_plural': 'Mode of Training',
            },
        ),
        migrations.CreateModel(
            name='TrainingStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='UpdateRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solved', models.BooleanField(default=False)),
                ('message', tinymce.models.HTMLField(verbose_name='Describe your Request Here')),
                ('request_date', models.DateTimeField(auto_now_add=True)),
                ('date_solved', models.DateTimeField(auto_now=True)),
                ('pdtp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_solved_by_user', to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', tinymce.models.HTMLField(blank=True, null=True)),
                ('user_category', models.CharField(max_length=200)),
                ('title', models.CharField(blank=True, max_length=200, null=True, verbose_name='Professional Title')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'MALE'), ('FEMALE', 'FEMALE')], max_length=200, null=True)),
                ('nationality', models.CharField(blank=True, max_length=200, null=True)),
                ('id_no', models.IntegerField(blank=True, null=True, verbose_name='ID/Passport Number')),
                ('ref_no', models.CharField(blank=True, max_length=200, null=True, verbose_name='PDTP Number')),
                ('phone_number', models.CharField(blank=True, help_text='format 0712345678', max_length=100, null=True, verbose_name='Phone Number')),
                ('postal_address', models.CharField(blank=True, help_text='Enter Address, Code,City', max_length=200, null=True, verbose_name='Postal Address')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('area_of_specialization', models.CharField(blank=True, max_length=200, null=True, verbose_name='Area of Specialization')),
                ('marital_status', models.CharField(blank=True, choices=[('SINGLE', 'SINGLE'), ('MARRIED', 'MARRIED')], max_length=200, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='pdtp pictures')),
                ('alternate_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Alternative Email Address')),
                ('alternate_cell', models.CharField(blank=True, max_length=16, null=True, verbose_name='Alternative Phone No.')),
                ('assignedmentor', models.BooleanField(default=False)),
                ('physical_address', models.CharField(blank=True, max_length=200, null=True)),
                ('nearest_institution', models.CharField(blank=True, help_text='e.g nearest primary school', max_length=200, null=True, verbose_name='Nearest Public Institution')),
                ('slug', models.SlugField(blank=True, null=True)),
                ('twitter', models.CharField(blank=True, max_length=300, null=True, verbose_name='Twitter Profile Link')),
                ('facebook', models.CharField(blank=True, max_length=300, null=True, verbose_name='Facebook Profile Link')),
                ('linkedin', models.CharField(blank=True, max_length=300, null=True, verbose_name='Linkedin Profile Link')),
                ('active', models.BooleanField(default=True)),
                ('county_of_birth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='county_of_origin', to='app.County', verbose_name='County of Birth')),
                ('deactivated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_dactivated_by_user', to=settings.AUTH_USER_MODEL, verbose_name='Activated/Deactivated By')),
                ('speciality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.Specialization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear', verbose_name='Year Joined')),
            ],
        ),
        migrations.AddField(
            model_name='trainingcourse',
            name='institution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingInstitution'),
        ),
        migrations.AddField(
            model_name='trainingcourse',
            name='secretariat',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admins', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingcourse',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingCourseStatus'),
        ),
        migrations.AddField(
            model_name='trainingcourse',
            name='year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingCategory'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='course',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingCourse', verbose_name='Course'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='institution',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingInstitution', verbose_name='Certification Body'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='mode',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingMode'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='pdtp',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.TrainingStatus', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='trainingapplication',
            name='year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='skill',
            name='skill_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.SkillLevel'),
        ),
        migrations.AddField(
            model_name='skill',
            name='skill_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.SkillType', verbose_name='skill Specilization'),
        ),
        migrations.AddField(
            model_name='skill',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='partner',
            name='cohort',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PartnerCohort'),
        ),
        migrations.AddField(
            model_name='leave',
            name='leave_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.LeaveType'),
        ),
        migrations.AddField(
            model_name='leave',
            name='pdtp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='leave',
            name='secretariat',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_approved_by_secretariat', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='leave',
            name='supervisor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='leave_approved_by_supervisor', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='laptoporder',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear', verbose_name='Cohort Year'),
        ),
        migrations.AddField(
            model_name='issue',
            name='year',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='innovationevaluationperparam',
            name='innovation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InnovationSubmission'),
        ),
        migrations.AddField(
            model_name='innovationevaluationperparam',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InnovationEvaluationParameter'),
        ),
        migrations.AddField(
            model_name='innovationevaluationdata',
            name='innovation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InnovationSubmission'),
        ),
        migrations.AddField(
            model_name='innovationevaluationdata',
            name='parameter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.InnovationEvaluationParameter'),
        ),
        migrations.AddField(
            model_name='exitsinglequestionparameter',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='exitrateparameter',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='exitparameter',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear'),
        ),
        migrations.AddField(
            model_name='broadcast',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.PdtpYear', verbose_name='Cohort Year'),
        ),
        migrations.AlterUniqueTogether(
            name='trainingapplication',
            unique_together=set([('pdtp', 'course')]),
        ),
    ]
